/* tslint:disable */
/* eslint-disable */
/**
 * Bcknddm API
 * API a bcknddm adatbázis tábláinak kezeléséhez. Generálva a backnddbcreate.sql alapján.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: luczialex@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * tábla a felhasználóknak.
 * @export
 * @interface Felhasznalo
 */
export interface Felhasznalo {
    /**
     * egyedi azonosító.
     * @type {number}
     * @memberof Felhasznalo
     */
    readonly flhsznlId?: number;
    /**
     * neve.
     * @type {string}
     * @memberof Felhasznalo
     */
    nev: string;
    /**
     * emailcíme.
     * @type {string}
     * @memberof Felhasznalo
     */
    email: string;
    /**
     * jelszo (a teszt alatt txt-ben, egyébkén hash sózva).
     * @type {string}
     * @memberof Felhasznalo
     */
    jelszo?: string;
    /**
     * 60 karakter 10 csoportban kötőjelekkel elválsztva.
     * @type {string}
     * @memberof Felhasznalo
     */
    readonly apikulcs?: string;
    /**
     * ezredmásodperc pontosság.
     * @type {Date}
     * @memberof Felhasznalo
     */
    readonly letrejott?: Date;
    /**
     * ezredmásodperc pontosság.
     * @type {Date}
     * @memberof Felhasznalo
     */
    readonly modositas?: Date;
    /**
     * évhónapnap 23 óra 59 perc 59 másodperc.
     * @type {Date}
     * @memberof Felhasznalo
     */
    lejar?: Date;
    /**
     * Megadja, hogy a felhasználó beléphet-e.
     * @type {boolean}
     * @memberof Felhasznalo
     */
    belephet?: boolean;
}

/**
 * Check if a given object implements the Felhasznalo interface.
 */
export function instanceOfFelhasznalo(value: object): value is Felhasznalo {
    if (!('nev' in value) || value['nev'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function FelhasznaloFromJSON(json: any): Felhasznalo {
    return FelhasznaloFromJSONTyped(json, false);
}

export function FelhasznaloFromJSONTyped(json: any, ignoreDiscriminator: boolean): Felhasznalo {
    if (json == null) {
        return json;
    }
    return {
        
        'flhsznlId': json['flhsznl_id'] == null ? undefined : json['flhsznl_id'],
        'nev': json['nev'],
        'email': json['email'],
        'jelszo': json['jelszo'] == null ? undefined : json['jelszo'],
        'apikulcs': json['apikulcs'] == null ? undefined : json['apikulcs'],
        'letrejott': json['letrejott'] == null ? undefined : (new Date(json['letrejott'])),
        'modositas': json['modositas'] == null ? undefined : (new Date(json['modositas'])),
        'lejar': json['Lejar'] == null ? undefined : (new Date(json['Lejar'])),
        'belephet': json['Belephet'] == null ? undefined : json['Belephet'],
    };
}

export function FelhasznaloToJSON(json: any): Felhasznalo {
    return FelhasznaloToJSONTyped(json, false);
}

export function FelhasznaloToJSONTyped(value?: Omit<Felhasznalo, 'flhsznl_id'|'apikulcs'|'letrejott'|'modositas'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'nev': value['nev'],
        'email': value['email'],
        'jelszo': value['jelszo'],
        'Lejar': value['lejar'] == null ? undefined : ((value['lejar']).toISOString()),
        'Belephet': value['belephet'],
    };
}

