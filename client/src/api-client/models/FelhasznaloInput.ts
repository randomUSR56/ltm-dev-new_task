/* tslint:disable */
/* eslint-disable */
/**
 * Bcknddm API
 * API a bcknddm adatbázis tábláinak kezeléséhez. Generálva a backnddbcreate.sql alapján.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: luczialex@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Felhasználó adatok létrehozáshoz vagy módosításhoz.
 * @export
 * @interface FelhasznaloInput
 */
export interface FelhasznaloInput {
    /**
     * neve.
     * @type {string}
     * @memberof FelhasznaloInput
     */
    nev: string;
    /**
     * emailcíme.
     * @type {string}
     * @memberof FelhasznaloInput
     */
    email: string;
    /**
     * jelszo (a teszt alatt txt-ben, egyébkén hash sózva).
     * @type {string}
     * @memberof FelhasznaloInput
     */
    jelszo: string;
    /**
     * évhónapnap 23 óra 59 perc 59 másodperc.
     * @type {Date}
     * @memberof FelhasznaloInput
     */
    lejar?: Date;
    /**
     * Megadja, hogy a felhasználó beléphet-e.
     * @type {boolean}
     * @memberof FelhasznaloInput
     */
    belephet?: boolean;
}

/**
 * Check if a given object implements the FelhasznaloInput interface.
 */
export function instanceOfFelhasznaloInput(value: object): value is FelhasznaloInput {
    if (!('nev' in value) || value['nev'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('jelszo' in value) || value['jelszo'] === undefined) return false;
    return true;
}

export function FelhasznaloInputFromJSON(json: any): FelhasznaloInput {
    return FelhasznaloInputFromJSONTyped(json, false);
}

export function FelhasznaloInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): FelhasznaloInput {
    if (json == null) {
        return json;
    }
    return {
        
        'nev': json['nev'],
        'email': json['email'],
        'jelszo': json['jelszo'],
        'lejar': json['Lejar'] == null ? undefined : (new Date(json['Lejar'])),
        'belephet': json['Belephet'] == null ? undefined : json['Belephet'],
    };
}

export function FelhasznaloInputToJSON(json: any): FelhasznaloInput {
    return FelhasznaloInputToJSONTyped(json, false);
}

export function FelhasznaloInputToJSONTyped(value?: FelhasznaloInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'nev': value['nev'],
        'email': value['email'],
        'jelszo': value['jelszo'],
        'Lejar': value['lejar'] == null ? undefined : ((value['lejar']).toISOString()),
        'Belephet': value['belephet'],
    };
}

