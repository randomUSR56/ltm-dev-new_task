/* tslint:disable */
/* eslint-disable */
/**
 * Bcknddm API
 * API a bcknddm adatbázis tábláinak kezeléséhez. Generálva a backnddbcreate.sql alapján.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: luczialex@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GeoPoint
 */
export interface GeoPoint {
    /**
     * 
     * @type {string}
     * @memberof GeoPoint
     */
    type: GeoPointTypeEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof GeoPoint
     */
    coordinates: Array<number>;
}


/**
 * @export
 */
export const GeoPointTypeEnum = {
    Point: 'Point'
} as const;
export type GeoPointTypeEnum = typeof GeoPointTypeEnum[keyof typeof GeoPointTypeEnum];


/**
 * Check if a given object implements the GeoPoint interface.
 */
export function instanceOfGeoPoint(value: object): value is GeoPoint {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('coordinates' in value) || value['coordinates'] === undefined) return false;
    return true;
}

export function GeoPointFromJSON(json: any): GeoPoint {
    return GeoPointFromJSONTyped(json, false);
}

export function GeoPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeoPoint {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'coordinates': json['coordinates'],
    };
}

export function GeoPointToJSON(json: any): GeoPoint {
    return GeoPointToJSONTyped(json, false);
}

export function GeoPointToJSONTyped(value?: GeoPoint | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'coordinates': value['coordinates'],
    };
}

